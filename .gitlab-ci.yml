image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:latest

stages:
  - build
  - deploy

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375
  DOCKER_REPO: ebispot/eqtl-sumstats-service

before_script:
  - apk add --no-cache docker-compose

build:
  stage: build
  script:
    # Login to Docker Hub
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin

    # Build the image using docker-compose
    - docker-compose build

    # Check if the image was built successfully and get the image name
    - docker images
    - BUILT_IMAGE=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep "eqtl-sumstats-service-spark-app" | head -n 1)
    - echo "Built image: $BUILT_IMAGE"

    # Tag the built image with both latest and CI_COMMIT_SHA
    - docker tag $BUILT_IMAGE docker.io/$DOCKER_REPO:latest
    - docker tag $BUILT_IMAGE docker.io/$DOCKER_REPO:$CI_COMMIT_SHA

    # Push both the SHA-tagged and latest images
    - docker push docker.io/$DOCKER_REPO:$CI_COMMIT_SHA
    - docker push docker.io/$DOCKER_REPO:latest

  only:
    - master
    - dev


# Deploy the application using Singularity and Slurm
deploy_staging:
  image: alpine
  stage: deploy
  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    # # Copy the deployment script to the HPC
    # - scp ./deployment/START_EQTL_INGEST.sh $WORKER_USER@$WORKER_SERVER_SLURM:$WORKER_DIR_DEV

    # SSH into the HPC and run the deployment script
    - ssh -o StrictHostKeyChecking=no "$WORKER_USER"@"$WORKER_SERVER_SLURM" "sbatch --mem=12000M --time=00:30:00 -D $WORKER_DIR_DEV -o deploy.out -e deploy.err --wrap='./START_EQTL_INGEST.sh $CI_COMMIT_SHA'"
  tags:
    - gwas
  only:
    - master
    - dev

